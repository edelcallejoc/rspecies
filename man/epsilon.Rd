% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epsilon.R
\docType{methods}
\name{epsilon-methods}
\alias{epsilon,BinMatProb,BinMatCount,ANY-method}
\alias{epsilon,BinMatProb,BinMatCount-method}
\alias{epsilon-methods}
\title{Epsilon function for NB Hypothesis Testing for Spatial Data Mining}
\usage{
epsilon(prob.mat, count.mat, lap_fac = 0.1)

\S4method{epsilon}{BinMatProb,BinMatCount}(prob.mat, count.mat, lap_fac = 0.1)
}
\arguments{
\item{prob.mat}{a \code{BinMatProb} object from \code{\link[rspecies]{probs}}.}

\item{count.mat}{a \code{BinMatCount} object from \code{\link[rspecies]{counts}}.}

\item{lap_fac}{numeric. See \code{\link[rspecies]{laplace}}.}
}
\value{
This function returns a \code{list} object with 2 elements.
    The elements are: Ecx and Ecnx (see Details for further explanation).
}
\description{
Take a \code{list} object from \code{\link[rspecies]{probs}}
    and a \code{list} object from \code{\link[rspecies]{counts}} and
    calculates the Epsilon values for Naive Bayes Hypothesis Testing
    for Spatial Data Mining.
}
\details{
The elements of the list are defined as follow.

    \strong{Ecx}: numeric matrix. The epsilon value for C given X is
    calculated as \eqn{\frac{Nx(P(C|X)-P(C))}{\sqrt{Nx*P(C)*(1-P(C))}}}.
    Where \eqn{Nx} is the number of X's successes, \eqn{P(C|X)} is the
    conditional probability of C given X and \eqn{P(C)} is the probability
    of succes of C.

    \strong{Ecnx}: numeric matrix. The epsilon value for C given X's
    complement is calculated as \eqn{\frac{Nx'(P(C|X')-P(C))}{\sqrt{Nx'*P(C)*(1-P(C))}}}.
    Where \eqn{Nx'} is the number of X's failures, \eqn{P(C|X')} is the
    conditional probability of C given X's complement and \eqn{P(C)}
    is the probability of succes of C.
}
\examples{
library(sp)
library(rgeos)
data(Mex0)
data(mammals)

# Generating de grid from Mex0 data
Mex0.grd<-grd_build(Mex0)

# Identification points of mammals with colnames = NULL.
x.mat<-id_pts(grd = Mex0.grd, pts = mammals, colnames = NULL)

# Counting matrices
count.mat<-counts(x.mat)

# Including bioclim
# Extracting values from 19 bioclim variables
bio.sp <- raster_breaks(bioclim, Mex0.grd)
bnames <- as.character(levels(as.factor(bio.sp@data$nameID)))
bio.mat <- id_pts(grd = Mex0.grd, pts = bio.sp, colnames = bnames)
count.bmat <- counts(x.mat, target = c("X1","X2"), bioclim = bio.mat)

# Probability matrices
prob.mat<-probs(count.mat, laplace = 0.1)
prob.bmat<-probs(count.bmat, laplace = 0.1)

# Epsilon function
system.time(epsilon.mat<-epsilon(prob.mat, count.mat))
system.time(epsilon.bmat<-epsilon(prob.bmat, count.bmat))

#' # See data with DT package
library(DT)
datatable(data.frame(Ecx = epsilon.mat$Ecx[,1]),
    caption = "Target: X1 - Laplace's factor: 0.1")\%>\%
    formatRound(1:5,digits = 3)
}
\author{
Enrique Del Callejo Canal (\email{edelcallejoc@gmail.com}).
}

