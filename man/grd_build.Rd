% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grd_build.R
\name{grd_build}
\alias{grd_build}
\title{Generate a grid from SpatialPolygonsDataFrame.}
\usage{
grd_build(mappol, proj4trans = sp::CRS("+init=epsg:3857"), tol = 100,
  TP = TRUE, resolution = 20, r.ceiling = TRUE, g.int = TRUE,
  pretty.int = FALSE, info = FALSE)
}
\arguments{
\item{mappol}{A \code{SpatialPolygonsDataFrame} object. \code{bbox(mappol)}
should be different from NULL. See \code{help(bbox)} for more details.}

\item{proj4trans}{A \code{CRS} class object. By default \code{CRS('+init=3857')}.
se \code{help(CRS)} for more details. See \url{http://spatialreference.org/}
for more projection system. It is recomended to use a metric
projection.}

\item{tol}{argument pass to \code{gSimplify()}. See \code{help(gSimplify)}
for more details.}

\item{TP}{argument pass to \code{gSimplify()}. See \code{help(gSimplify)}
for more details.}

\item{resolution}{integer. Greater than 0. Units are in Km. Default 20.}

\item{r.ceiling}{logical. If \code{TRUE} the distances are ceiling rounded.
If \code{FALSE} the distances are floor rounded.}

\item{g.int}{logical. If \code{TRUE} the grid's cells that intersects \code{mappol}
are returned. If \code{FALSE} all grid's cells in the \code{mappol} bounding box
are returned.}

\item{pretty.int}{logical. If \code{g.int=TRUE} and \code{pretty.int=TRUE} the
grid's cells that intersects \code{mappol}'s boundaries are reshape for
better visualization. Requires \code{g.int=TRUE}. This option expend more
computing time.}

\item{info}{logical. If \code{TRUE} cell's info is printed. By default is \code{FALSE}.}
}
\value{
A \code{SpatialPolygonsDataFrame} object. It includes all the polygons
    that form the grid. Data slot contains the identifiers for each cells.
}
\description{
The grid is generated from pseudo mercator
    or web mercator (epsg:3857) projection system. It is recomended
    to use metrics projection in order to preserve areas. First,
    transform mappol into web mercator projection. Then, the distances
    between the four coordinates given by the bounding box are calculated
    and divided by resolution argument in order to determine the number of
    cells per direction. Finally, \code{\link[sp]{GridTopology}} is applied to
    generate the coordinates that create the final objecto of class
    \code{SpatialPolygonsDataFrame}.
}
\details{
This function generates a grid from \code{SpatialPolygonsDataFrame}.
    The main steps are: projection system transformation, geometry
    simplification, bounding box extraction, distance calculation,
    calculation of cells per direction (Longitude, Latitude), grid
    topology creation, class reassigment of grid topology into
    \code{SpatialPolygons} object and compute the intersected polygons between
    grid and \code{mappol}. Finally, the returned object is a
    \code{SpatialPolygonsDataFrame}.

    \code{\link[sp]{spTransform}} (see \code{help(spTransform)} for more details)
    is applied for transformation of mappol into a metric projection
    (by default web mercator, epsg:3857). The returned object in this
    step is a \code{SpatialPolygonsDataFrame} called \code{mappol.tr}

    \code{\link[rgeos]{gSimplify}} (see \code{help(gSimplify)} for more details)
    is applied for simplify geometry of the transformed mappol in order
    to reduce computation time and memory size.

    \code{\link[sp]{bbox}} (see \code{help(bbox)} for more details) is applied to
    extract the bounding box of the transformed and simplify \code{mappol}.
    \code{\link[sp]{spDists}} (see \code{help(spDists)} for more details) is applied
    for distances calculation. \code{\link[base]{ceiling}}  and
    \code{\link[base]{floor}} is applied for rounding options.

    \code{\link[sp]{GridTopology}} (see \code{help(GridTopology)} for more details)
    is applied to generate the grid. Then, \code{\link[sp]{as.SpatialPolygons.GridTopology}}
    is applied to transform the \code{GridTopology} object into
    \code{SpatialPolygonsDataFrame}.

    Finally, \code{\link[rgeos]{gIntersects}} (see \code{help(gIntersects)}
    for more details) is applied to extract the grid's cells that intersects
    \code{mappol}. \code{\link[rgeos]{gContains}} and \code{\link[rgeos]{gIntersection}}
    (see \code{help(gContains)} and \code{help(gIntersection)} for more details)
    is applied to extract the grid's cells that intersects \code{mappol} and generate
    a pretty visualization. The latter method may require considerable computing time
    depending on the number of coordinates contained in the \code{mappol} polygon.
}
\examples{
library(sp)
library(rgeos)
data(Mex0)

# Whithout pretty intersection
# Default resolution is 20 km.

system.time(Mex0.grd<-grd_build(Mex0))
plot(Mex0.grd)
plot(Mex0, add = TRUE)

# leaflet interaction

library(leaflet)
leaflet() \%>\%
    addProviderTiles('OpenStreetMap.Mapnik',
    options = providerTileOptions(noWrap = TRUE))\%>\%
    addPolygons(data=Mex0.grd, stroke=TRUE, color = '#FFFFFF',
    layerId = Mex0.grd@data$ID, weight = 1, opacity = 0.3,
    fillColor = '#A9A9A9', fillOpacity = 0.6,
    popup = row.names(Mex0.grd@data))

# With Pretty options

system.time(Mex0.grd.p<-grd_build(Mex0, pretty.int=TRUE))
plot(Mex0.grd.p)

}
\author{
Enrique Del Callejo Canal (\email{edelcallejoc@gmail.com}),
    based on implemented algortihms in web platform SPECIES (see References).
}
\references{
\url{http://species.conabio.gob.mx/}
}

